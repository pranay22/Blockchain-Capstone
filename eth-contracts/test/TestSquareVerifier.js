// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var verifier = artifacts.require("Verifier");
var proof = require("../../zokrates/code/square/proof.json");

contract('Test Verifier', accounts => {
    // Test verification with correct proof
    describe('testing verifier', function() {
    
        beforeEach(async function() {
        this.contract = await verifier.new( );
        })

        // - use the contents from proof.json generated from zokrates steps
        it("can can compute correct", async function() {
        let result = await this.contract.verifyTx.call(proof.proof, proof.inputs);
        assert.equal(result, true, "Must proof as correct");
        });
        
        // Test verification with incorrect proof
        it("can can proof incorrect", async function() {
            let result = await this.contract.verifyTx.call(proof.proof, 
            [
                "0x0000000000000000000000000000000000000000000000000000000000000003",
                "0x0000000000000000000000000000000000000000000000000000000000000001"
            ]);
            assert.equal(result, false);
        });
    });
});